version: "3.9"

services:
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   command: >
  #     certonly --webroot -w /var/www/certbot
  #     --keep-until-expiring --email maitreyavaidyam@gmail.com
  #     -d nccbackend.credenz.co.in --agree-tos
  #   networks: [judge_net]
  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d:ro
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   depends_on:
  #     - backend
  #   networks: [judge_net]
  backend:
    image: maitreya16/node-backend:latest  
    container_name: node-backend
    ports:
      - "3000:3000"
    environment:
      # COOKIE_DOMAIN: 34.100.169.196
      JWT_SECRET: your_super_secret_key
      NODE_ENV: production
      DB_URL: postgresql://neondb_owner:npg_4vzRJqHVSu9a@ep-bold-bush-aeoqgqq0-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require
    networks: [judge_net]
  server:
    image: maitreya16/flask-windows:latest
    container_name: flask-server
    restart: always
    command: python workers/server.py
    environment:
      PYTHONPATH: /app
    networks: [judge_net]

  worker:
    image: maitreya16/flask-windows:latest
    container_name: flask-worker
    restart: always
    command: >
      celery -A workers.tasks worker
            --loglevel=${LOG_LEVEL:-DEBUG}
            --concurrency=3
            --queues=submitQueue,runQueue,runSystemQueue
    depends_on:
      - redis
    environment:
      HOST_MACHINE_BASE_DIR: /home/ajuubhaiug/OJ  # Change this to your actual path  
      PYTHONPATH: /app
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_BROKER_URL: redis://redis:6379/0
      REDIS_BACKEND_URL: redis://redis:6379/0
      BACKEND_HOST: backend
      BACKEND_PORT: 3000
    working_dir: /app
    volumes:
      - ./submissions:/app/submissions:z
      - /var/run/docker.sock:/var/run/docker.sock  
    networks: [judge_net]

  redis:
    image: redis:latest
    container_name: my-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks: [judge_net]

networks: 
  judge_net:

volumes:
  redisdata: